Search.setIndex({"docnames": ["generated/warg", "generated/warg.arguments", "generated/warg.arguments.ConfigObject", "generated/warg.arguments.UpperAttrMetaclass", "generated/warg.arguments.add_bool_arg", "generated/warg.arguments.check_for_duplicates_in_args", "generated/warg.arguments.config_to_mapping", "generated/warg.arguments.get_upper_case_vars_or_protected_of", "generated/warg.arguments.lower_dict", "generated/warg.arguments.str2bool", "generated/warg.arguments.str_to_bool", "generated/warg.arguments.to_lower_properties", "generated/warg.arguments.upper_dict", "generated/warg.ast_ops", "generated/warg.ast_ops.arg_indentifier", "generated/warg.ast_ops.arg_indentifier.ArgIdentifier", "generated/warg.ast_ops.arg_indentifier.cprinta", "generated/warg.ast_ops.arg_indentifier.cprintz", "generated/warg.ast_ops.arg_indentifier.ge_arg_names_recurse", "generated/warg.ast_ops.arg_indentifier.get_arg_names", "generated/warg.ast_ops.first_arg_identifier", "generated/warg.ast_ops.first_arg_identifier.FirstArgIdentifier", "generated/warg.ast_ops.first_arg_identifier.cprint", "generated/warg.ast_ops.first_arg_identifier.get_first_arg_name", "generated/warg.ast_ops.first_arg_identifier.get_first_arg_name_recurse", "generated/warg.ast_ops.first_arg_identifier.recurse_first_args", "generated/warg.bases", "generated/warg.bases.property_settings", "generated/warg.bases.property_settings.PropertySettings", "generated/warg.boolean_tests", "generated/warg.boolean_tests.is_none_or_zero_or_negative", "generated/warg.boolean_tests.is_none_or_zero_or_negative_or_mod_zero", "generated/warg.boolean_tests.is_positive_and_mod_zero", "generated/warg.boolean_tests.is_zero_or_mod_below", "generated/warg.boolean_tests.is_zero_or_mod_zero", "generated/warg.boolean_tests.nand", "generated/warg.boolean_tests.xnor", "generated/warg.boolean_tests.xor", "generated/warg.business", "generated/warg.business.busy_indicator", "generated/warg.colors", "generated/warg.colors.color_conversion", "generated/warg.colors.color_conversion.RGB", "generated/warg.colors.color_conversion.RGBA", "generated/warg.colors.color_conversion.color_from_str", "generated/warg.colors.color_conversion.color_to_str", "generated/warg.colors.css_colors", "generated/warg.colors.css_colors.ansilen", "generated/warg.colors.css_colors.color", "generated/warg.colors.css_colors.is_string", "generated/warg.colors.css_colors.parse_rgb", "generated/warg.colors.css_colors.strip_color", "generated/warg.colors.label_colors", "generated/warg.colors.label_colors.compute_color_for_labels", "generated/warg.config_shell", "generated/warg.config_shell.ConfigShell", "generated/warg.config_shell.PlaybackShell", "generated/warg.context_wrapper", "generated/warg.context_wrapper.ContextWrapper", "generated/warg.context_wrapper.NopContext", "generated/warg.contexts", "generated/warg.contexts.IgnoreInterruptSignal", "generated/warg.data_structures", "generated/warg.data_structures.auto_dict", "generated/warg.data_structures.auto_dict.AD", "generated/warg.data_structures.auto_dict.AutoDict", "generated/warg.data_structures.auto_dict.recursive_default_dict_print", "generated/warg.data_structures.auto_dict.sanitise_auto_dict", "generated/warg.data_structures.mappings", "generated/warg.data_structures.mappings.AppendingDict", "generated/warg.data_structures.mappings.append_to_dict", "generated/warg.data_structures.mappings.invert_dict", "generated/warg.data_structures.mappings.invert_mapping", "generated/warg.data_structures.mappings.pivot_dict", "generated/warg.data_structures.mappings.pivot_dict_object", "generated/warg.data_structures.named_ordered_dictionary", "generated/warg.data_structures.named_ordered_dictionary.IllegalAttributeKey", "generated/warg.data_structures.named_ordered_dictionary.NOD", "generated/warg.data_structures.named_ordered_dictionary.NamedOrderedDictionary", "generated/warg.data_structures.ordered_set", "generated/warg.data_structures.ordered_set.OrderedSet", "generated/warg.data_structures.sequences", "generated/warg.data_structures.sequences.split", "generated/warg.datetimes", "generated/warg.datetimes.default_datetime_repr", "generated/warg.datetimes.now_repr", "generated/warg.debug", "generated/warg.debug.evaluate_context", "generated/warg.decorators", "generated/warg.decorators.caching", "generated/warg.decorators.caching.look_up_table", "generated/warg.decorators.caching.look_up_table.add_lut", "generated/warg.decorators.caching.look_up_table.look_up", "generated/warg.decorators.caching.look_up_table.look_up_args", "generated/warg.decorators.caching.look_up_table.look_up_kws", "generated/warg.decorators.caching.look_up_table.precompute_lut", "generated/warg.decorators.caching.look_up_table.precompute_lut_args", "generated/warg.decorators.caching.look_up_table.precompute_lut_args_dec", "generated/warg.decorators.caching.look_up_table.precompute_lut_dec", "generated/warg.decorators.caching.look_up_table.precompute_lut_kws", "generated/warg.decorators.caching.property_caching", "generated/warg.decorators.caching.property_caching.cached_property", "generated/warg.decorators.hashing", "generated/warg.decorators.hashing.make_hash", "generated/warg.decorators.kw_passing", "generated/warg.decorators.kw_passing.AlsoDecorator", "generated/warg.decorators.kw_passing.drop_args", "generated/warg.decorators.kw_passing.drop_kws", "generated/warg.decorators.kw_passing.drop_unused_args", "generated/warg.decorators.kw_passing.drop_unused_kws", "generated/warg.decorators.kw_passing.eval_sig_kw_params", "generated/warg.decorators.kw_passing.passes_kws_to", "generated/warg.decorators.kw_passing.super_init_pass_on_kws", "generated/warg.decorators.kw_passing.to_keyword_only", "generated/warg.decorators.timing", "generated/warg.decorators.timing.StopWatch", "generated/warg.decorators.timing.timeit", "generated/warg.dist_is_editable", "generated/warg.exceptions", "generated/warg.exceptions.IncompatiblePackageVersions", "generated/warg.exceptions.NoData", "generated/warg.functions", "generated/warg.functions.args_sink", "generated/warg.functions.call_identity", "generated/warg.functions.chain_apply", "generated/warg.functions.chain_filter", "generated/warg.functions.collate_first_dim", "generated/warg.functions.empty_str", "generated/warg.functions.flip_two_level_mapping", "generated/warg.functions.identity", "generated/warg.functions.invert_shallow_mapping", "generated/warg.functions.kws_sink", "generated/warg.functions.nop", "generated/warg.functions.prod", "generated/warg.functions.sink", "generated/warg.functions.swap_mapping_order", "generated/warg.gdkc", "generated/warg.gdkc.GDKC", "generated/warg.gdkc.GeneralisedDelayedKwargConstruction", "generated/warg.generators", "generated/warg.generators.cyclic_generators", "generated/warg.generators.cyclic_generators.cos_gen", "generated/warg.generators.cyclic_generators.sin_gen", "generated/warg.generators.filtering", "generated/warg.generators.filtering.FilterModeEnum", "generated/warg.generators.filtering.symbol_filter", "generated/warg.generators.mapping_generator", "generated/warg.generators.mapping_generator.inner_map", "generated/warg.generators.mapping_generator.kw_map", "generated/warg.generators.mapping_generator.yield_and_map", "generated/warg.generators.zipping_generator", "generated/warg.generators.zipping_generator.unzip", "generated/warg.generators.zipping_generator.unzipper", "generated/warg.get_version", "generated/warg.imports", "generated/warg.imports.import_warning", "generated/warg.imports.is_module_available", "generated/warg.imports.reimported_warning", "generated/warg.manipulation", "generated/warg.manipulation.recursive_flatten", "generated/warg.map_itertools", "generated/warg.map_itertools.map_combinations", "generated/warg.map_itertools.map_combinations_with_replacement", "generated/warg.map_itertools.map_permutations", "generated/warg.map_itertools.map_product", "generated/warg.map_itertools.map_value_product", "generated/warg.math", "generated/warg.math.multiples", "generated/warg.math.multiples.lcm", "generated/warg.math.ordinals", "generated/warg.math.ordinals.ceil_even", "generated/warg.math.ordinals.ceil_odd", "generated/warg.math.ordinals.floor_even", "generated/warg.math.ordinals.floor_odd", "generated/warg.math.ordinals.next_even", "generated/warg.math.ordinals.next_odd", "generated/warg.math.ordinals.prev_even", "generated/warg.math.ordinals.prev_odd", "generated/warg.math.powers", "generated/warg.math.powers.next_pow", "generated/warg.math.powers.next_pow_10", "generated/warg.math.powers.next_pow_2", "generated/warg.math.powers.next_power", "generated/warg.math.powers.next_power_10", "generated/warg.math.powers.next_power_2", "generated/warg.math.powers.prev_pow", "generated/warg.math.powers.prev_pow_10", "generated/warg.math.powers.prev_pow_2", "generated/warg.metas", "generated/warg.metas.post_init", "generated/warg.metas.post_init.PostInit", "generated/warg.metas.singleton", "generated/warg.mixins", "generated/warg.mixins.dict_mixins", "generated/warg.mixins.dict_mixins.IterDictItemsMixin", "generated/warg.mixins.dict_mixins.IterDictKeysMixin", "generated/warg.mixins.dict_mixins.IterDictValuesMixin", "generated/warg.mixins.ordinal_index_mixin", "generated/warg.mixins.ordinal_index_mixin.OrdinalIndexingDictMixin", "generated/warg.ode", "generated/warg.os", "generated/warg.os.os_platform", "generated/warg.os.os_platform.get_platform", "generated/warg.os.os_platform.is_linux", "generated/warg.os.os_platform.is_mac", "generated/warg.os.os_platform.is_nix", "generated/warg.os.os_platform.is_windows", "generated/warg.os.path_utilities", "generated/warg.os.path_utilities.latest_file", "generated/warg.plugin", "generated/warg.plugin.get_dynamic_plugins", "generated/warg.plugin.get_plugins", "generated/warg.plugin.get_static_plugins", "generated/warg.replication", "generated/warg.replication.BroadcastNone", "generated/warg.replication.replicate", "generated/warg.strings", "generated/warg.strings.indent_lines", "generated/warg.strings.str_to_tuple", "generated/warg.styling", "generated/warg.styling.PrintStyle", "generated/warg.styling.generate_style", "generated/warg.styling.get_terminal_size", "generated/warg.styling.hyperlink_path", "generated/warg.styling.hyperlink_url", "generated/warg.styling.sprint", "generated/warg.text", "generated/warg.text.deamericanise", "generated/warg.text.to_british_english", "generated/warg.typing_extension", "getting_started", "index"], "filenames": ["generated\\warg.rst", "generated\\warg.arguments.rst", "generated\\warg.arguments.ConfigObject.rst", "generated\\warg.arguments.UpperAttrMetaclass.rst", "generated\\warg.arguments.add_bool_arg.rst", "generated\\warg.arguments.check_for_duplicates_in_args.rst", "generated\\warg.arguments.config_to_mapping.rst", "generated\\warg.arguments.get_upper_case_vars_or_protected_of.rst", "generated\\warg.arguments.lower_dict.rst", "generated\\warg.arguments.str2bool.rst", "generated\\warg.arguments.str_to_bool.rst", "generated\\warg.arguments.to_lower_properties.rst", "generated\\warg.arguments.upper_dict.rst", "generated\\warg.ast_ops.rst", "generated\\warg.ast_ops.arg_indentifier.rst", "generated\\warg.ast_ops.arg_indentifier.ArgIdentifier.rst", "generated\\warg.ast_ops.arg_indentifier.cprinta.rst", "generated\\warg.ast_ops.arg_indentifier.cprintz.rst", "generated\\warg.ast_ops.arg_indentifier.ge_arg_names_recurse.rst", "generated\\warg.ast_ops.arg_indentifier.get_arg_names.rst", "generated\\warg.ast_ops.first_arg_identifier.rst", "generated\\warg.ast_ops.first_arg_identifier.FirstArgIdentifier.rst", "generated\\warg.ast_ops.first_arg_identifier.cprint.rst", "generated\\warg.ast_ops.first_arg_identifier.get_first_arg_name.rst", "generated\\warg.ast_ops.first_arg_identifier.get_first_arg_name_recurse.rst", "generated\\warg.ast_ops.first_arg_identifier.recurse_first_args.rst", "generated\\warg.bases.rst", "generated\\warg.bases.property_settings.rst", "generated\\warg.bases.property_settings.PropertySettings.rst", "generated\\warg.boolean_tests.rst", "generated\\warg.boolean_tests.is_none_or_zero_or_negative.rst", "generated\\warg.boolean_tests.is_none_or_zero_or_negative_or_mod_zero.rst", "generated\\warg.boolean_tests.is_positive_and_mod_zero.rst", "generated\\warg.boolean_tests.is_zero_or_mod_below.rst", "generated\\warg.boolean_tests.is_zero_or_mod_zero.rst", "generated\\warg.boolean_tests.nand.rst", "generated\\warg.boolean_tests.xnor.rst", "generated\\warg.boolean_tests.xor.rst", "generated\\warg.business.rst", "generated\\warg.business.busy_indicator.rst", "generated\\warg.colors.rst", "generated\\warg.colors.color_conversion.rst", "generated\\warg.colors.color_conversion.RGB.rst", "generated\\warg.colors.color_conversion.RGBA.rst", "generated\\warg.colors.color_conversion.color_from_str.rst", "generated\\warg.colors.color_conversion.color_to_str.rst", "generated\\warg.colors.css_colors.rst", "generated\\warg.colors.css_colors.ansilen.rst", "generated\\warg.colors.css_colors.color.rst", "generated\\warg.colors.css_colors.is_string.rst", "generated\\warg.colors.css_colors.parse_rgb.rst", "generated\\warg.colors.css_colors.strip_color.rst", "generated\\warg.colors.label_colors.rst", "generated\\warg.colors.label_colors.compute_color_for_labels.rst", "generated\\warg.config_shell.rst", "generated\\warg.config_shell.ConfigShell.rst", "generated\\warg.config_shell.PlaybackShell.rst", "generated\\warg.context_wrapper.rst", "generated\\warg.context_wrapper.ContextWrapper.rst", "generated\\warg.context_wrapper.NopContext.rst", "generated\\warg.contexts.rst", "generated\\warg.contexts.IgnoreInterruptSignal.rst", "generated\\warg.data_structures.rst", "generated\\warg.data_structures.auto_dict.rst", "generated\\warg.data_structures.auto_dict.AD.rst", "generated\\warg.data_structures.auto_dict.AutoDict.rst", "generated\\warg.data_structures.auto_dict.recursive_default_dict_print.rst", "generated\\warg.data_structures.auto_dict.sanitise_auto_dict.rst", "generated\\warg.data_structures.mappings.rst", "generated\\warg.data_structures.mappings.AppendingDict.rst", "generated\\warg.data_structures.mappings.append_to_dict.rst", "generated\\warg.data_structures.mappings.invert_dict.rst", "generated\\warg.data_structures.mappings.invert_mapping.rst", "generated\\warg.data_structures.mappings.pivot_dict.rst", "generated\\warg.data_structures.mappings.pivot_dict_object.rst", "generated\\warg.data_structures.named_ordered_dictionary.rst", "generated\\warg.data_structures.named_ordered_dictionary.IllegalAttributeKey.rst", "generated\\warg.data_structures.named_ordered_dictionary.NOD.rst", "generated\\warg.data_structures.named_ordered_dictionary.NamedOrderedDictionary.rst", "generated\\warg.data_structures.ordered_set.rst", "generated\\warg.data_structures.ordered_set.OrderedSet.rst", "generated\\warg.data_structures.sequences.rst", "generated\\warg.data_structures.sequences.split.rst", "generated\\warg.datetimes.rst", "generated\\warg.datetimes.default_datetime_repr.rst", "generated\\warg.datetimes.now_repr.rst", "generated\\warg.debug.rst", "generated\\warg.debug.evaluate_context.rst", "generated\\warg.decorators.rst", "generated\\warg.decorators.caching.rst", "generated\\warg.decorators.caching.look_up_table.rst", "generated\\warg.decorators.caching.look_up_table.add_lut.rst", "generated\\warg.decorators.caching.look_up_table.look_up.rst", "generated\\warg.decorators.caching.look_up_table.look_up_args.rst", "generated\\warg.decorators.caching.look_up_table.look_up_kws.rst", "generated\\warg.decorators.caching.look_up_table.precompute_lut.rst", "generated\\warg.decorators.caching.look_up_table.precompute_lut_args.rst", "generated\\warg.decorators.caching.look_up_table.precompute_lut_args_dec.rst", "generated\\warg.decorators.caching.look_up_table.precompute_lut_dec.rst", "generated\\warg.decorators.caching.look_up_table.precompute_lut_kws.rst", "generated\\warg.decorators.caching.property_caching.rst", "generated\\warg.decorators.caching.property_caching.cached_property.rst", "generated\\warg.decorators.hashing.rst", "generated\\warg.decorators.hashing.make_hash.rst", "generated\\warg.decorators.kw_passing.rst", "generated\\warg.decorators.kw_passing.AlsoDecorator.rst", "generated\\warg.decorators.kw_passing.drop_args.rst", "generated\\warg.decorators.kw_passing.drop_kws.rst", "generated\\warg.decorators.kw_passing.drop_unused_args.rst", "generated\\warg.decorators.kw_passing.drop_unused_kws.rst", "generated\\warg.decorators.kw_passing.eval_sig_kw_params.rst", "generated\\warg.decorators.kw_passing.passes_kws_to.rst", "generated\\warg.decorators.kw_passing.super_init_pass_on_kws.rst", "generated\\warg.decorators.kw_passing.to_keyword_only.rst", "generated\\warg.decorators.timing.rst", "generated\\warg.decorators.timing.StopWatch.rst", "generated\\warg.decorators.timing.timeit.rst", "generated\\warg.dist_is_editable.rst", "generated\\warg.exceptions.rst", "generated\\warg.exceptions.IncompatiblePackageVersions.rst", "generated\\warg.exceptions.NoData.rst", "generated\\warg.functions.rst", "generated\\warg.functions.args_sink.rst", "generated\\warg.functions.call_identity.rst", "generated\\warg.functions.chain_apply.rst", "generated\\warg.functions.chain_filter.rst", "generated\\warg.functions.collate_first_dim.rst", "generated\\warg.functions.empty_str.rst", "generated\\warg.functions.flip_two_level_mapping.rst", "generated\\warg.functions.identity.rst", "generated\\warg.functions.invert_shallow_mapping.rst", "generated\\warg.functions.kws_sink.rst", "generated\\warg.functions.nop.rst", "generated\\warg.functions.prod.rst", "generated\\warg.functions.sink.rst", "generated\\warg.functions.swap_mapping_order.rst", "generated\\warg.gdkc.rst", "generated\\warg.gdkc.GDKC.rst", "generated\\warg.gdkc.GeneralisedDelayedKwargConstruction.rst", "generated\\warg.generators.rst", "generated\\warg.generators.cyclic_generators.rst", "generated\\warg.generators.cyclic_generators.cos_gen.rst", "generated\\warg.generators.cyclic_generators.sin_gen.rst", "generated\\warg.generators.filtering.rst", "generated\\warg.generators.filtering.FilterModeEnum.rst", "generated\\warg.generators.filtering.symbol_filter.rst", "generated\\warg.generators.mapping_generator.rst", "generated\\warg.generators.mapping_generator.inner_map.rst", "generated\\warg.generators.mapping_generator.kw_map.rst", "generated\\warg.generators.mapping_generator.yield_and_map.rst", "generated\\warg.generators.zipping_generator.rst", "generated\\warg.generators.zipping_generator.unzip.rst", "generated\\warg.generators.zipping_generator.unzipper.rst", "generated\\warg.get_version.rst", "generated\\warg.imports.rst", "generated\\warg.imports.import_warning.rst", "generated\\warg.imports.is_module_available.rst", "generated\\warg.imports.reimported_warning.rst", "generated\\warg.manipulation.rst", "generated\\warg.manipulation.recursive_flatten.rst", "generated\\warg.map_itertools.rst", "generated\\warg.map_itertools.map_combinations.rst", "generated\\warg.map_itertools.map_combinations_with_replacement.rst", "generated\\warg.map_itertools.map_permutations.rst", "generated\\warg.map_itertools.map_product.rst", "generated\\warg.map_itertools.map_value_product.rst", "generated\\warg.math.rst", "generated\\warg.math.multiples.rst", "generated\\warg.math.multiples.lcm.rst", "generated\\warg.math.ordinals.rst", "generated\\warg.math.ordinals.ceil_even.rst", "generated\\warg.math.ordinals.ceil_odd.rst", "generated\\warg.math.ordinals.floor_even.rst", "generated\\warg.math.ordinals.floor_odd.rst", "generated\\warg.math.ordinals.next_even.rst", "generated\\warg.math.ordinals.next_odd.rst", "generated\\warg.math.ordinals.prev_even.rst", "generated\\warg.math.ordinals.prev_odd.rst", "generated\\warg.math.powers.rst", "generated\\warg.math.powers.next_pow.rst", "generated\\warg.math.powers.next_pow_10.rst", "generated\\warg.math.powers.next_pow_2.rst", "generated\\warg.math.powers.next_power.rst", "generated\\warg.math.powers.next_power_10.rst", "generated\\warg.math.powers.next_power_2.rst", "generated\\warg.math.powers.prev_pow.rst", "generated\\warg.math.powers.prev_pow_10.rst", "generated\\warg.math.powers.prev_pow_2.rst", "generated\\warg.metas.rst", "generated\\warg.metas.post_init.rst", "generated\\warg.metas.post_init.PostInit.rst", "generated\\warg.metas.singleton.rst", "generated\\warg.mixins.rst", "generated\\warg.mixins.dict_mixins.rst", "generated\\warg.mixins.dict_mixins.IterDictItemsMixin.rst", "generated\\warg.mixins.dict_mixins.IterDictKeysMixin.rst", "generated\\warg.mixins.dict_mixins.IterDictValuesMixin.rst", "generated\\warg.mixins.ordinal_index_mixin.rst", "generated\\warg.mixins.ordinal_index_mixin.OrdinalIndexingDictMixin.rst", "generated\\warg.ode.rst", "generated\\warg.os.rst", "generated\\warg.os.os_platform.rst", "generated\\warg.os.os_platform.get_platform.rst", "generated\\warg.os.os_platform.is_linux.rst", "generated\\warg.os.os_platform.is_mac.rst", "generated\\warg.os.os_platform.is_nix.rst", "generated\\warg.os.os_platform.is_windows.rst", "generated\\warg.os.path_utilities.rst", "generated\\warg.os.path_utilities.latest_file.rst", "generated\\warg.plugin.rst", "generated\\warg.plugin.get_dynamic_plugins.rst", "generated\\warg.plugin.get_plugins.rst", "generated\\warg.plugin.get_static_plugins.rst", "generated\\warg.replication.rst", "generated\\warg.replication.BroadcastNone.rst", "generated\\warg.replication.replicate.rst", "generated\\warg.strings.rst", "generated\\warg.strings.indent_lines.rst", "generated\\warg.strings.str_to_tuple.rst", "generated\\warg.styling.rst", "generated\\warg.styling.PrintStyle.rst", "generated\\warg.styling.generate_style.rst", "generated\\warg.styling.get_terminal_size.rst", "generated\\warg.styling.hyperlink_path.rst", "generated\\warg.styling.hyperlink_url.rst", "generated\\warg.styling.sprint.rst", "generated\\warg.text.rst", "generated\\warg.text.deamericanise.rst", "generated\\warg.text.to_british_english.rst", "generated\\warg.typing_extension.rst", "getting_started.rst", "index.rst"], "titles": ["warg", "warg.arguments", "warg.arguments.ConfigObject", "warg.arguments.UpperAttrMetaclass", "warg.arguments.add_bool_arg", "warg.arguments.check_for_duplicates_in_args", "warg.arguments.config_to_mapping", "warg.arguments.get_upper_case_vars_or_protected_of", "warg.arguments.lower_dict", "warg.arguments.str2bool", "warg.arguments.str_to_bool", "warg.arguments.to_lower_properties", "warg.arguments.upper_dict", "warg.ast_ops", "warg.ast_ops.arg_indentifier", "warg.ast_ops.arg_indentifier.ArgIdentifier", "warg.ast_ops.arg_indentifier.cprinta", "warg.ast_ops.arg_indentifier.cprintz", "warg.ast_ops.arg_indentifier.ge_arg_names_recurse", "warg.ast_ops.arg_indentifier.get_arg_names", "warg.ast_ops.first_arg_identifier", "warg.ast_ops.first_arg_identifier.FirstArgIdentifier", "warg.ast_ops.first_arg_identifier.cprint", "warg.ast_ops.first_arg_identifier.get_first_arg_name", "warg.ast_ops.first_arg_identifier.get_first_arg_name_recurse", "warg.ast_ops.first_arg_identifier.recurse_first_args", "warg.bases", "warg.bases.property_settings", "warg.bases.property_settings.PropertySettings", "warg.boolean_tests", "warg.boolean_tests.is_none_or_zero_or_negative", "warg.boolean_tests.is_none_or_zero_or_negative_or_mod_zero", "warg.boolean_tests.is_positive_and_mod_zero", "warg.boolean_tests.is_zero_or_mod_below", "warg.boolean_tests.is_zero_or_mod_zero", "warg.boolean_tests.nand", "warg.boolean_tests.xnor", "warg.boolean_tests.xor", "warg.business", "warg.business.busy_indicator", "warg.colors", "warg.colors.color_conversion", "warg.colors.color_conversion.rgb", "warg.colors.color_conversion.rgba", "warg.colors.color_conversion.color_from_str", "warg.colors.color_conversion.color_to_str", "warg.colors.css_colors", "warg.colors.css_colors.ansilen", "warg.colors.css_colors.color", "warg.colors.css_colors.is_string", "warg.colors.css_colors.parse_rgb", "warg.colors.css_colors.strip_color", "warg.colors.label_colors", "warg.colors.label_colors.compute_color_for_labels", "warg.config_shell", "warg.config_shell.ConfigShell", "warg.config_shell.PlaybackShell", "warg.context_wrapper", "warg.context_wrapper.ContextWrapper", "warg.context_wrapper.NopContext", "warg.contexts", "warg.contexts.IgnoreInterruptSignal", "warg.data_structures", "warg.data_structures.auto_dict", "warg.data_structures.auto_dict.AD", "warg.data_structures.auto_dict.AutoDict", "warg.data_structures.auto_dict.recursive_default_dict_print", "warg.data_structures.auto_dict.sanitise_auto_dict", "warg.data_structures.mappings", "warg.data_structures.mappings.AppendingDict", "warg.data_structures.mappings.append_to_dict", "warg.data_structures.mappings.invert_dict", "warg.data_structures.mappings.invert_mapping", "warg.data_structures.mappings.pivot_dict", "warg.data_structures.mappings.pivot_dict_object", "warg.data_structures.named_ordered_dictionary", "warg.data_structures.named_ordered_dictionary.IllegalAttributeKey", "warg.data_structures.named_ordered_dictionary.NOD", "warg.data_structures.named_ordered_dictionary.NamedOrderedDictionary", "warg.data_structures.ordered_set", "warg.data_structures.ordered_set.OrderedSet", "warg.data_structures.sequences", "warg.data_structures.sequences.split", "warg.datetimes", "warg.datetimes.default_datetime_repr", "warg.datetimes.now_repr", "warg.debug", "warg.debug.evaluate_context", "warg.decorators", "warg.decorators.caching", "warg.decorators.caching.look_up_table", "warg.decorators.caching.look_up_table.add_lut", "warg.decorators.caching.look_up_table.look_up", "warg.decorators.caching.look_up_table.look_up_args", "warg.decorators.caching.look_up_table.look_up_kws", "warg.decorators.caching.look_up_table.precompute_lut", "warg.decorators.caching.look_up_table.precompute_lut_args", "warg.decorators.caching.look_up_table.precompute_lut_args_dec", "warg.decorators.caching.look_up_table.precompute_lut_dec", "warg.decorators.caching.look_up_table.precompute_lut_kws", "warg.decorators.caching.property_caching", "warg.decorators.caching.property_caching.cached_property", "warg.decorators.hashing", "warg.decorators.hashing.make_hash", "warg.decorators.kw_passing", "warg.decorators.kw_passing.AlsoDecorator", "warg.decorators.kw_passing.drop_args", "warg.decorators.kw_passing.drop_kws", "warg.decorators.kw_passing.drop_unused_args", "warg.decorators.kw_passing.drop_unused_kws", "warg.decorators.kw_passing.eval_sig_kw_params", "warg.decorators.kw_passing.passes_kws_to", "warg.decorators.kw_passing.super_init_pass_on_kws", "warg.decorators.kw_passing.to_keyword_only", "warg.decorators.timing", "warg.decorators.timing.StopWatch", "warg.decorators.timing.timeit", "warg.dist_is_editable", "warg.exceptions", "warg.exceptions.IncompatiblePackageVersions", "warg.exceptions.NoData", "warg.functions", "warg.functions.args_sink", "warg.functions.call_identity", "warg.functions.chain_apply", "warg.functions.chain_filter", "warg.functions.collate_first_dim", "warg.functions.empty_str", "warg.functions.flip_two_level_mapping", "warg.functions.identity", "warg.functions.invert_shallow_mapping", "warg.functions.kws_sink", "warg.functions.nop", "warg.functions.prod", "warg.functions.sink", "warg.functions.swap_mapping_order", "warg.gdkc", "warg.gdkc.GDKC", "warg.gdkc.GeneralisedDelayedKwargConstruction", "warg.generators", "warg.generators.cyclic_generators", "warg.generators.cyclic_generators.cos_gen", "warg.generators.cyclic_generators.sin_gen", "warg.generators.filtering", "warg.generators.filtering.FilterModeEnum", "warg.generators.filtering.symbol_filter", "warg.generators.mapping_generator", "warg.generators.mapping_generator.inner_map", "warg.generators.mapping_generator.kw_map", "warg.generators.mapping_generator.yield_and_map", "warg.generators.zipping_generator", "warg.generators.zipping_generator.unzip", "warg.generators.zipping_generator.unzipper", "warg.get_version", "warg.imports", "warg.imports.import_warning", "warg.imports.is_module_available", "warg.imports.reimported_warning", "warg.manipulation", "warg.manipulation.recursive_flatten", "warg.map_itertools", "warg.map_itertools.map_combinations", "warg.map_itertools.map_combinations_with_replacement", "warg.map_itertools.map_permutations", "warg.map_itertools.map_product", "warg.map_itertools.map_value_product", "warg.math", "warg.math.multiples", "warg.math.multiples.lcm", "warg.math.ordinals", "warg.math.ordinals.ceil_even", "warg.math.ordinals.ceil_odd", "warg.math.ordinals.floor_even", "warg.math.ordinals.floor_odd", "warg.math.ordinals.next_even", "warg.math.ordinals.next_odd", "warg.math.ordinals.prev_even", "warg.math.ordinals.prev_odd", "warg.math.powers", "warg.math.powers.next_pow", "warg.math.powers.next_pow_10", "warg.math.powers.next_pow_2", "warg.math.powers.next_power", "warg.math.powers.next_power_10", "warg.math.powers.next_power_2", "warg.math.powers.prev_pow", "warg.math.powers.prev_pow_10", "warg.math.powers.prev_pow_2", "warg.metas", "warg.metas.post_init", "warg.metas.post_init.PostInit", "warg.metas.singleton", "warg.mixins", "warg.mixins.dict_mixins", "warg.mixins.dict_mixins.IterDictItemsMixin", "warg.mixins.dict_mixins.IterDictKeysMixin", "warg.mixins.dict_mixins.IterDictValuesMixin", "warg.mixins.ordinal_index_mixin", "warg.mixins.ordinal_index_mixin.OrdinalIndexingDictMixin", "warg.ode", "warg.os", "warg.os.os_platform", "warg.os.os_platform.get_platform", "warg.os.os_platform.is_linux", "warg.os.os_platform.is_mac", "warg.os.os_platform.is_nix", "warg.os.os_platform.is_windows", "warg.os.path_utilities", "warg.os.path_utilities.latest_file", "warg.plugin", "warg.plugin.get_dynamic_plugins", "warg.plugin.get_plugins", "warg.plugin.get_static_plugins", "warg.replication", "warg.replication.BroadcastNone", "warg.replication.replicate", "warg.strings", "warg.strings.indent_lines", "warg.strings.str_to_tuple", "warg.styling", "warg.styling.PrintStyle", "warg.styling.generate_style", "warg.styling.get_terminal_size", "warg.styling.hyperlink_path", "warg.styling.hyperlink_url", "warg.styling.sprint", "warg.text", "warg.text.deamericanise", "warg.text.to_british_english", "warg.typing_extension", "Getting Started", "Warg Documentation"], "terms": {"creat": [0, 13, 14, 20, 26, 27, 29, 38, 40, 41, 46, 52, 54, 57, 60, 62, 63, 69, 79, 81, 83, 86, 88, 89, 90, 100, 114, 118, 121, 139, 143, 146, 150, 154, 158, 160, 166, 167, 178, 188, 189, 191, 192, 199, 200, 201, 207, 209, 213, 216, 229], "27": [0, 191], "04": [0, 191], "2019": [0, 63, 114, 146, 150, 189, 191, 216], "author": [0, 191], "cnheider": [0, 191], "function": [0, 1, 14, 15, 16, 17, 20, 21, 22, 29, 38, 39, 41, 46, 52, 53, 63, 68, 81, 83, 86, 90, 102, 103, 104, 111, 114, 115, 140, 143, 146, 149, 150, 154, 158, 160, 167, 169, 178, 190, 201, 207, 209, 213, 216, 219, 226], "modul": [0, 7, 13, 26, 40, 51, 55, 56, 62, 84, 88, 89, 139, 155, 156, 166, 188, 192, 200, 231], "class": [1, 2, 3, 14, 15, 20, 21, 27, 28, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 75, 78, 79, 80, 100, 101, 103, 104, 105, 114, 115, 136, 138, 143, 144, 189, 190, 193, 194, 195, 196, 197, 198, 219, 220], "sourc": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 55, 56, 58, 59, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 78, 80, 82, 84, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 141, 142, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 185, 186, 187, 190, 194, 195, 196, 198, 202, 203, 204, 205, 206, 208, 210, 211, 212, 215, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228], "base": [2, 3, 15, 18, 21, 24, 55, 56, 58, 59, 61, 69, 78, 79, 80, 101, 105, 115, 138, 144, 179, 182, 185, 190, 194, 195, 196, 198, 220], "object": [2, 6, 7, 28, 49, 55, 56, 69, 74, 80, 101, 103, 105, 119, 136, 138, 194, 195, 196, 198, 220], "config": [2, 55], "__init__": [2, 3, 15, 21, 28, 55, 56, 58, 59, 61, 69, 78, 80, 101, 105, 115, 138, 144, 190, 194, 195, 196, 198, 220], "method": [2, 3, 15, 21, 28, 55, 56, 58, 59, 61, 69, 78, 80, 101, 105, 115, 138, 190, 194, 195, 196, 198, 220], "clsname": 3, "dct": 3, "dict": [3, 66, 67, 69, 70, 71, 73, 74, 78, 110, 122, 123, 128, 130, 161, 162, 163, 164, 165], "type": [3, 6, 7, 8, 11, 12, 16, 17, 18, 22, 24, 25, 39, 42, 43, 44, 45, 48, 50, 55, 56, 64, 65, 67, 70, 71, 73, 74, 76, 78, 82, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 106, 107, 108, 109, 110, 112, 113, 115, 116, 124, 125, 127, 132, 149, 156, 170, 171, 172, 173, 174, 175, 176, 177, 190, 215, 217, 221, 222, 227, 228], "upper": 3, "case": [3, 15, 21, 69, 80, 103], "all": [3, 51, 69, 78, 79, 80, 104, 111, 124, 125, 211], "attribut": [3, 28, 55, 56, 74, 76, 78, 103, 115, 144, 198], "__privat": 3, "arg": [3, 15, 21, 25, 55, 56, 69, 78, 87, 92, 93, 122, 123, 131, 134, 138, 190, 218], "kwarg": [3, 4, 5, 28, 31, 69, 78, 87, 92, 104, 111, 122, 123, 134, 136, 138, 190], "mro": [3, 190], "return": [3, 6, 7, 8, 9, 10, 11, 12, 15, 18, 21, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 48, 50, 55, 56, 58, 64, 65, 67, 69, 70, 71, 72, 73, 74, 78, 80, 82, 84, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 152, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 185, 190, 202, 203, 204, 205, 206, 208, 210, 211, 212, 215, 217, 221, 222, 227, 228], "s": [3, 9, 10, 44, 47, 48, 50, 51, 69, 80, 84, 190], "resolut": [3, 190], "order": [3, 69, 79, 80, 124, 135, 190], "parser": 4, "argumentpars": 4, "name": [4, 18, 24, 55, 56, 156], "str": [4, 9, 10, 16, 18, 19, 22, 23, 24, 39, 44, 45, 48, 55, 84, 85, 110, 119, 120, 122, 123, 127, 145, 148, 153, 155, 156, 157, 198, 202, 208, 210, 211, 212, 217, 221, 223, 224, 225, 227, 228], "dest": 4, "option": [4, 18, 19, 23, 24, 30, 31, 32, 33, 34, 55, 56, 67, 80, 112, 115, 136, 179, 182, 185, 221, 223, 224], "none": [4, 5, 15, 16, 17, 21, 22, 30, 31, 32, 33, 34, 48, 55, 56, 58, 66, 69, 78, 80, 112, 125, 132, 134, 155, 157, 179, 182, 185, 221, 223, 224, 225], "convers": 4, "default": [4, 55, 56, 69, 78, 115, 211, 212, 225], "bool": [4, 6, 7, 9, 10, 15, 21, 30, 31, 35, 36, 37, 58, 80, 97, 110, 111, 112, 115, 117, 147, 156, 203, 204, 205, 206, 208, 217, 221, 223, 224, 225], "fals": [4, 15, 19, 21, 23, 31, 32, 33, 34, 80, 95, 96, 97, 98, 99, 110, 111, 112, 115, 208, 217, 221, 223, 224, 225], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 48, 50, 55, 56, 66, 67, 70, 71, 73, 74, 78, 82, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 122, 123, 124, 125, 126, 128, 130, 134, 135, 141, 142, 147, 148, 149, 152, 155, 156, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 185, 208, 215, 217, 221, 228], "c": [6, 84], "only_upper_cas": 6, "true": [6, 7, 9, 10, 31, 32, 33, 34, 80, 115, 117, 125, 147, 153, 156, 208, 223], "namedordereddictionari": [6, 77, 222], "lower_kei": 7, "map": [7, 8, 11, 12, 95, 99, 128, 130, 135, 161, 162, 163, 164, 165, 228], "truthi": [9, 10], "tupl": [9, 10, 42, 43, 44, 45, 48, 53, 55, 56, 69, 72, 78, 82, 87, 95, 103, 110, 123, 126, 131, 161, 162, 163, 210, 211, 212, 215, 218], "1": [9, 10, 15, 19, 21, 23, 39, 66, 80, 141, 142, 210, 231], "c_dict": 11, "26": [13, 14, 20], "01": [13, 14, 20, 29, 40, 46, 57, 121, 143, 167, 178], "2021": [13, 14, 20, 60, 143, 167, 178, 207], "ast": [13, 15, 21], "op": 13, "verbos": [15, 19, 21, 23, 95, 96, 97, 98, 99], "max_num_intermediate_unnamed_el": [15, 19, 21, 23], "int": [15, 21, 30, 31, 32, 33, 34, 39, 42, 43, 44, 45, 48, 53, 66, 80, 133, 135, 141, 142, 149, 161, 162, 163, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 215, 217, 221, 225], "nodevisitor": [15, 21], "descript": [15, 19, 21, 23, 28, 55, 56, 61, 101, 115, 119, 120, 129, 145, 151, 153, 159, 161, 162, 163, 164, 165, 180, 181, 183, 184, 186, 187, 219, 220, 223, 224, 226], "generic_visit": [15, 21], "node": [15, 21], "call": [15, 21, 55, 56, 111, 115], "explicit": [15, 21], "visitor": [15, 21], "exist": [15, 21, 80], "visit": [15, 21], "visit_cal": [15, 21], "should": [15, 21, 56], "work": [15, 21], "most": [15, 21], "us": [15, 21, 55, 56, 78, 80, 111, 115, 155, 199], "guarante": [15, 21], "v": [16, 17, 22, 69, 78, 128, 170, 171, 172, 173, 174, 175, 176, 177], "ani": [16, 17, 22, 31, 32, 33, 34, 78, 87, 103, 117, 122, 123, 129, 131, 145, 147, 148, 149, 153, 164, 165, 217, 221, 225], "writer": [16, 17, 22], "callabl": [16, 17, 22, 30, 31, 32, 33, 34, 39, 58, 91, 95, 96, 99, 106, 107, 108, 109, 110, 111, 112, 115, 116, 124, 125, 136, 138, 147, 148, 149], "built": [16, 17, 22, 39, 115, 149], "print": [16, 17, 22, 39, 55, 56, 80, 115, 149, 225], "delimin": [16, 22], "unpack": [18, 24], "chain": [18, 24], "gener": [18, 24, 51, 90, 199], "iter": [18, 24, 39, 69, 80, 87, 95, 96, 119, 124, 125, 126, 133, 141, 142, 145, 147, 148, 149, 151, 152, 194, 195, 196], "func_nam": [19, 23], "17": [26, 27, 38, 54, 192, 200], "03": [26, 27, 38, 41, 52, 54, 83, 86, 89, 90, 118, 188], "2020": [26, 27, 29, 38, 41, 52, 54, 57, 62, 79, 81, 83, 86, 88, 89, 90, 100, 118, 121, 139, 154, 158, 160, 166, 188, 192, 199, 200, 201, 209, 213, 229], "02": [29, 40, 46, 60, 88, 100, 118, 139, 166, 192, 200], "obj": [30, 49, 221, 225], "union": [30, 31, 32, 33, 34, 53, 80, 119, 133, 141, 142, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 215, 221, 225], "float": [30, 31, 32, 33, 34, 53, 133, 141, 142, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 215], "residual_print": [30, 31, 32, 33, 34], "mod": [31, 32, 33, 34], "counter": [31, 32, 33, 34], "ret": [31, 32, 33, 34], "alt": [31, 32, 33, 34], "test": [32, 33, 34], "posit": 32, "0": [32, 33, 34, 78, 80, 149, 231], "both": [32, 198, 211], "ar": [32, 33, 34, 55, 56, 58, 69, 72, 80, 103, 111, 125, 155], "els": [32, 33, 34, 69, 78], "below": 33, "zero": [33, 34, 218], "b": [35, 36, 37, 42, 43, 128, 168], "stream": 39, "indicator_interv": 39, "phase": 39, "you": [39, 78, 111], "can": [39, 78, 79, 80, 103, 115], "choos": 39, "arbitrari": 39, "like": [39, 69, 79, 103, 115], "2022": [40, 46, 231], "30": [41, 89], "r": [42, 43], "g": [42, 43], "seper": [44, 45], "t": [45, 55, 56, 78, 80, 115], "given": [47, 49, 69, 78, 80, 117], "string": [47, 48, 49, 51, 55, 56, 80], "embed": 47, "ansi": [47, 48, 51], "code": [47, 155], "what": [47, 131], "would": 47, "its": [47, 79, 80], "length": 47, "without": [47, 131], "those": [47, 51, 125], "fg": 48, "bg": 48, "style": [48, 51], "add": [48, 53, 80], "format": 48, "foreground": 48, "specif": [48, 55, 56, 210], "background": 48, "unicod": 48, "python": [48, 78, 199, 210], "2": [48, 69, 78, 80, 161, 162, 163, 164, 215, 217], "Is": 49, "remov": [51, 69, 78, 80], "sequenc": [51, 58, 79, 80, 124, 125, 135, 159, 215], "from": [51, 55, 56, 69, 78, 80, 84, 103, 115], "The": [51, 55, 56, 80, 104, 124, 125, 210, 211, 212], "set": [51, 55, 56, 69, 78, 80, 95, 96, 99, 103, 138], "possibl": [51, 55, 56], "larg": 51, "so": [51, 79, 80, 103, 131], "doe": [51, 69, 72, 80], "try": [51, 55, 56], "strip": 51, "everi": [51, 79, 80], "one": [51, 55, 56, 80, 104], "But": 51, "some": [51, 78], "outlier": 51, "seen": 51, "just": [51, 55, 56, 157], "text": [51, 55, 56], "thi": [51, 55, 56, 69, 72, 80, 103, 104, 111, 199, 211], "other": [51, 80, 103], "wild": 51, "includ": [51, 103, 211], "k": [51, 69, 78, 128], "aka": 51, "el": 51, "eras": 51, "end": [51, 220], "line": [51, 55, 56], "m": [51, 72, 84, 128, 130, 135], "ters": 51, "version": [51, 119, 231], "more": [51, 80, 115, 218], "common": [51, 80, 168], "0m": 51, "20": [52, 78], "label": 53, "palett": 53, "2047": 53, "32767": 53, "1048575": 53, "simpl": 53, "fix": 53, "depend": 53, "completekei": [55, 56], "tab": [55, 56], "stdin": [55, 56], "stdout": [55, 56, 225], "playbackshel": 55, "instanti": [55, 56], "orient": [55, 56], "interpret": [55, 56], "framework": [55, 56], "argument": [55, 56, 58, 115, 136, 218], "readlin": [55, 56], "complet": [55, 56], "kei": [55, 56, 69, 70, 72, 73, 74, 76, 78, 80, 195, 198], "If": [55, 56, 69, 78, 80, 115, 125, 179, 182, 185], "avail": [55, 56, 104, 120, 156], "command": [55, 56], "done": [55, 56], "automat": [55, 56, 90], "specifi": [55, 56, 69, 78, 179, 182, 185, 210, 211, 212], "altern": [55, 56], "input": [55, 56], "output": [55, 56], "file": [55, 56, 155, 199], "sy": [55, 56], "add_func": 55, "func": [55, 101, 147, 148, 149], "add_opt": 55, "getter": 55, "setter": 55, "delet": 55, "add_property_opt": 55, "ps": 55, "propertyset": 55, "close": [55, 56], "cmdloop": [55, 56], "intro": [55, 56], "repeatedli": [55, 56], "issu": [55, 56], "prompt": [55, 56], "accept": [55, 56, 134], "pars": [55, 56], "an": [55, 56, 69, 76, 79, 80, 117, 124, 125, 138, 144, 152, 157, 218], "initi": [55, 56], "prefix": [55, 56, 224], "off": [55, 56], "receiv": [55, 56, 104, 111], "dispatch": [55, 56], "action": [55, 56], "pass": [55, 56, 58, 103, 104, 111], "them": [55, 56], "remaind": [55, 56], "column": [55, 56], "list": [55, 56, 78, 80, 103, 210, 211, 212], "displaywidth": [55, 56], "80": [55, 56], "displai": [55, 56, 115], "compact": [55, 56], "each": [55, 56, 80], "onli": [55, 56, 80, 103, 195, 196], "wide": [55, 56], "necessari": [55, 56], "separ": [55, 56], "two": [55, 56, 78, 80], "space": [55, 56], "wa": [55, 56, 76], "legibl": [55, 56], "enough": [55, 56], "state": [55, 56, 111], "next": [55, 56], "ha": [55, 56, 69, 79, 80, 152, 155], "been": [55, 56, 155], "enter": [55, 56], "against": [55, 56], "otherwis": [55, 56, 69, 72, 78], "complete_": [55, 56], "get": [55, 56, 69, 78, 80, 201, 231], "completedefault": [55, 56], "ignor": [55, 56], "when": [55, 56, 76, 80, 115, 155], "By": [55, 56], "empti": [55, 56, 69, 78, 80], "recogn": [55, 56], "overridden": [55, 56], "error": [55, 56, 80], "messag": [55, 56], "do_clos": [55, 56], "record": [55, 56], "stop": [55, 56], "window": [55, 56], "exit": [55, 56], "do_exit": [55, 56], "do_help": [55, 56], "help": [55, 56], "detail": [55, 56], "cmd": [55, 56], "do_playback": [55, 56], "path": [55, 56, 208, 223], "playback": [55, 56], "do_record": [55, 56], "save": [55, 56], "futur": [55, 56, 100], "filenam": [55, 56], "emptylin": [55, 56], "respons": [55, 56], "repeat": [55, 56, 78, 155, 161, 162, 163, 164], "last": [55, 56, 69, 80, 115], "nonempti": [55, 56], "get_nam": 55, "onecmd": [55, 56], "parselin": [55, 56], "contain": [55, 56, 78, 80, 103], "mai": [55, 56], "couldn": [55, 56], "postcmd": [55, 56], "hook": [55, 56], "execut": [55, 56, 115], "after": [55, 56], "finish": [55, 56], "postloop": [55, 56], "onc": [55, 56], "about": [55, 56], "precmd": [55, 56], "preloop": [55, 56], "though": 56, "had": [56, 80], "normal": 56, "need": [56, 103], "see": 56, "valu": [56, 69, 70, 72, 78, 80, 115, 144, 196], "flag": 56, "indic": [56, 80], "whether": [56, 80], "07": [57, 158, 188, 207, 213, 229], "context_manag": 58, "enabl": 58, "construction_arg": 58, "construction_kwarg": 58, "abstractcontextmanag": [58, 59, 61, 115], "allow": [58, 104], "condit": 58, "applic": 58, "context": [58, 115, 155], "uninstanti": 58, "manag": [58, 115], "suppli": 58, "construct": [58, 136, 138], "disabl": 58, "propag": 58, "09": [60, 86, 160, 216], "alsodecor": 61, "06": [62, 79, 81, 90, 154, 199, 201, 209], "11": [62, 79, 114, 146, 189], "data": [62, 90, 120], "structur": 62, "21": 63, "12": [63, 189], "defaultdict": [64, 65], "d": [66, 67, 69, 70, 71, 73, 74, 78], "depth": 66, "clear": [69, 78, 80], "item": [69, 78, 80, 125, 128], "copi": [69, 80], "shallow": [69, 80], "fromkei": 69, "new": [69, 80, 190], "dictionari": [69, 78, 103], "provid": 69, "view": 69, "pop": [69, 78, 80], "correspond": [69, 78], "found": [69, 78], "keyerror": [69, 78, 80], "rais": [69, 78, 80], "popitem": [69, 78], "pair": [69, 78, 194], "lifo": 69, "first": [69, 80, 115, 211, 212], "out": 69, "setdefault": [69, 78, 128], "insert": [69, 80], "updat": [69, 78, 80, 115, 128], "e": [69, 179, 182, 185], "f": [69, 84, 91, 92, 93, 94, 95, 96, 99, 106, 107, 108, 109, 112, 116], "present": [69, 80], "lack": 69, "In": [69, 103], "either": 69, "follow": 69, "invert": [71, 72], "have": [72, 80], "duplic": 72, "hashabl": [72, 103], "same": [72, 115], "invert_dict": 72, "new_m": 72, "rtype": 72, "pivot_kei": [73, 74], "pivot_valu": [73, 74], "except": [76, 80], "type_": 76, "deem": 76, "illeg": 76, "being": 76, "overwritten": 76, "alia": [77, 137], "mutablemap": [78, 87, 119], "usag": 78, "nodict": 78, "parama": 78, "str_paramet": 78, "paramb": 78, "10": [78, 80, 150, 216], "assert": 78, "arg0": 78, "arg1": 78, "as_list": 78, "As": 78, "other_param": 78, "paramc": 78, "5": [78, 80], "add_unnamed_arg": 78, "as_dict": 78, "as_flat_tupl": 78, "as_tupl": 78, "itemsview": 78, "keysview": 78, "also": [78, 79, 111], "merg": 78, "overrid": [78, 190], "self": [78, 80, 115], "valuesview": 78, "modifi": [79, 136], "import": 79, "orderedset": 79, "custom": [79, 80], "mutableset": [79, 80], "rememb": [79, 80], "entri": [79, 80, 210, 212], "index": [79, 80, 198, 231], "look": [79, 80, 90], "up": [79, 80, 90, 138], "It": 79, "act": 79, "recip": 79, "origin": 79, "post": 79, "activest": 79, "raymond": 79, "hettig": 79, "releas": 79, "under": 79, "mit": 79, "licens": 79, "exampl": [80, 103], "3": 80, "alreadi": 80, "oset": 80, "append": 80, "count": 80, "integ": [80, 198], "number": [80, 218], "occurr": 80, "differ": 80, "element": 80, "difference_upd": 80, "4": 80, "6": 80, "discard": 80, "do": 80, "absent": 80, "mixin": 80, "implement": [80, 104], "which": [80, 125, 155, 190], "ask": 80, "non": [80, 198], "get_index": 80, "indexerror": 80, "get_loc": 80, "intersect": 80, "between": 80, "defin": [80, 190], "intersection_upd": 80, "keep": 80, "anoth": 80, "preserv": 80, "7": 80, "9": 80, "isdisjoint": 80, "null": 80, "issubset": 80, "report": [80, 155], "issuperset": 80, "member": 80, "symmetric_differ": 80, "symmetr": 80, "That": 80, "exactli": 80, "Their": 80, "preced": 80, "symmetric_difference_upd": 80, "were": 80, "combin": 80, "uniqu": 80, "appear": 80, "8": 80, "plugin": 81, "13": [81, 167, 178, 199, 201, 209], "seq": [82, 159], "18": [83, 143, 229], "date": 84, "user": [84, 155], "christian": 84, "anaconda3": 84, "env": 84, "py38": 84, "lib": 84, "py": 84, "str_format": 84, "y": 84, "d_": 84, "h": 84, "x": [87, 179, 180, 181, 182, 183, 184, 185, 186, 187, 215], "16": [88, 100, 139, 166], "kw": [94, 104, 111, 131, 148, 194], "arg_set": [95, 96, 97, 98, 99], "todo": 100, "Will": 100, "part": 100, "functool": 100, "o": 103, "make": [103, 104], "level": [103, 149], "where": 103, "kind": 103, "collect": 103, "pertin": 103, "For": 103, "fashion": 103, "cl": 103, "__dict__": [103, 194, 195, 196, 198], "__name__": 103, "A": [103, 111, 138], "fn": 103, "__code__": 103, "concept": 104, "here": 104, "let": [104, 155], "contract": [104, 111], "caller": 104, "onward": [104, 111], "inspect": 104, "autocomplet": 104, "document": 104, "fetch": 104, "passing_sig": 110, "signatur": 110, "receiver_func": [110, 111], "keep_from_var_kw": [110, 111, 112], "attach": 111, "explicitli": 111, "No": [111, 115, 120], "graph": 111, "check": [111, 156], "actual": 111, "enforc": 111, "yet": 111, "must": 111, "abl": 111, "multipl": 111, "super_bas": 112, "val": 113, "14": [114, 121], "perf_count": 115, "auto_start_on_construct": 115, "auto_start_on_ent": 115, "auto_stop_on_exit": 115, "measur": 115, "perform": [115, 136], "checkpoint": 115, "absolut": 115, "begin": 115, "timer": 115, "your": 115, "oper": 115, "__str__": 115, "intern": 115, "regist": 115, "sinc": 115, "even": 115, "taken": 115, "block": 115, "outsid": 115, "leav": 115, "whole": 115, "respect": 115, "def": 115, "foo": 115, "42": 115, "override_arithmet": 115, "properti": 115, "since_start": 115, "start": [115, 231], "whatev": 115, "usual": 115, "fraction": 115, "second": 115, "start_tim": 115, "stop_tim": 115, "tick": 115, "wasn": 115, "befor": [115, 136], "creation": 115, "thing": 115, "dist": 117, "distribut": 117, "edit": 117, "instal": [117, 156, 230], "packag": [119, 210], "msg": 120, "appli": [124, 125], "sequenti": 124, "filter": 125, "through": 125, "subset": 125, "yield": 125, "batch": 126, "result": 128, "modif": 131, "ever": 131, "drop": 131, "calcul": 133, "product": 133, "param": [133, 138], "everyth": 134, "generalis": [136, 138], "wrapper": 136, "delai": 136, "encapsul": 136, "constructor": [136, 138], "final": 136, "generaliseddelayedkwargconstruct": 137, "later": 138, "instanc": [138, 194, 195, 196, 198], "magnitud": [141, 142], "enum": 144, "enumer": 144, "string_stream": 145, "symbol": 145, "exclusion_mod": 145, "filtermodeenum": 145, "exclude_postfix": 145, "aggregate_yield": 147, "28": [150, 154], "unzip": 152, "Be": 152, "carefulli": 152, "undefin": 152, "expect": 152, "behaviour": 152, "append_tim": 153, "module_nam": [155, 157], "inform": 155, "heavi": 155, "multiprocess": 155, "identifi": 155, "load": [155, 210], "restructur": 155, "avoid": 155, "idea": 157, "23": [158, 213], "least": 168, "n": [179, 182, 185], "natur": [179, 182, 185], "logarithm": [179, 182, 185], "metaclass": 190, "__call__": 190, "sorteddict": 198, "ordin": 198, "access": 198, "platform": 201, "util": 201, "05": 207, "directori": 208, "extens": 208, "recurs": 208, "raise_on_failur": 208, "package_nam": [210, 211, 212], "dynam": [210, 211], "http": [210, 224], "org": 210, "point": 210, "known": 211, "parti": [211, 212], "static": 211, "bundl": 211, "declar": 212, "global": 212, "_plugin": 212, "time": 215, "input_str": 217, "indent_spaces_num": 217, "ignore_single_lin": 217, "convert": [218, 227], "seri": 218, "attributes_join": 220, "color": [221, 225], "random": [221, 225], "bold": [221, 225], "highlight": [221, 225], "underlin": [221, 225], "ital": [221, 225], "printstyl": 221, "link": [223, 224], "link_id": [223, 224], "linux": 223, "print_kw": 225, "stylis": 225, "valid": 225, "grai": 225, "red": 225, "green": 225, "yellow": 225, "blue": 225, "magenta": 225, "cyan": 225, "white": 225, "crimson": 225, "naiv": 227, "exchang": 227, "z": 227, "english": 227, "british": 227, "rule": 228, "mappingproxi": 228, "iz": 228, "ise": 228, "yze": 228, "yse": 228, "iza": 228, "isa": 228, "warg": 230, "pip": 230, "u": 230, "jun": 231, "29": 231, "read": 231, "guid": 231, "search": 231, "page": 231}, "objects": {"": [[0, 0, 0, "-", "warg"]], "warg": [[1, 0, 0, "-", "arguments"], [13, 0, 0, "-", "ast_ops"], [26, 0, 0, "-", "bases"], [29, 0, 0, "-", "boolean_tests"], [38, 0, 0, "-", "business"], [40, 0, 0, "-", "colors"], [54, 0, 0, "-", "config_shell"], [57, 0, 0, "-", "context_wrapper"], [60, 0, 0, "-", "contexts"], [62, 0, 0, "-", "data_structures"], [83, 0, 0, "-", "datetimes"], [86, 0, 0, "-", "debug"], [88, 0, 0, "-", "decorators"], [117, 3, 1, "", "dist_is_editable"], [118, 0, 0, "-", "exceptions"], [121, 0, 0, "-", "functions"], [136, 0, 0, "-", "gdkc"], [139, 0, 0, "-", "generators"], [153, 3, 1, "", "get_version"], [154, 0, 0, "-", "imports"], [158, 0, 0, "-", "manipulation"], [160, 0, 0, "-", "map_itertools"], [166, 0, 0, "-", "math"], [188, 0, 0, "-", "metas"], [192, 0, 0, "-", "mixins"], [199, 0, 0, "-", "ode"], [200, 0, 0, "-", "os"], [209, 0, 0, "-", "plugin"], [213, 0, 0, "-", "replication"], [216, 0, 0, "-", "strings"], [219, 0, 0, "-", "styling"], [226, 0, 0, "-", "text"], [229, 0, 0, "-", "typing_extension"]], "warg.arguments": [[2, 1, 1, "", "ConfigObject"], [3, 1, 1, "", "UpperAttrMetaclass"], [4, 3, 1, "", "add_bool_arg"], [5, 3, 1, "", "check_for_duplicates_in_args"], [6, 3, 1, "", "config_to_mapping"], [7, 3, 1, "", "get_upper_case_vars_or_protected_of"], [8, 3, 1, "", "lower_dict"], [9, 3, 1, "", "str2bool"], [10, 3, 1, "", "str_to_bool"], [11, 3, 1, "", "to_lower_properties"], [12, 3, 1, "", "upper_dict"]], "warg.arguments.ConfigObject": [[2, 2, 1, "", "__init__"]], "warg.arguments.UpperAttrMetaclass": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "mro"]], "warg.ast_ops": [[14, 0, 0, "-", "arg_indentifier"], [20, 0, 0, "-", "first_arg_identifier"]], "warg.ast_ops.arg_indentifier": [[15, 1, 1, "", "ArgIdentifier"], [16, 3, 1, "", "cprinta"], [17, 3, 1, "", "cprintz"], [18, 3, 1, "", "ge_arg_names_recurse"], [19, 3, 1, "", "get_arg_names"]], "warg.ast_ops.arg_indentifier.ArgIdentifier": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "generic_visit"], [15, 2, 1, "", "visit"], [15, 2, 1, "", "visit_Call"]], "warg.ast_ops.first_arg_identifier": [[21, 1, 1, "", "FirstArgIdentifier"], [22, 3, 1, "", "cprint"], [23, 3, 1, "", "get_first_arg_name"], [24, 3, 1, "", "get_first_arg_name_recurse"], [25, 3, 1, "", "recurse_first_args"]], "warg.ast_ops.first_arg_identifier.FirstArgIdentifier": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "generic_visit"], [21, 2, 1, "", "visit"], [21, 2, 1, "", "visit_Call"]], "warg.bases": [[27, 0, 0, "-", "property_settings"]], "warg.bases.property_settings": [[28, 1, 1, "", "PropertySettings"]], "warg.bases.property_settings.PropertySettings": [[28, 2, 1, "", "__init__"]], "warg.boolean_tests": [[30, 3, 1, "", "is_none_or_zero_or_negative"], [31, 3, 1, "", "is_none_or_zero_or_negative_or_mod_zero"], [32, 3, 1, "", "is_positive_and_mod_zero"], [33, 3, 1, "", "is_zero_or_mod_below"], [34, 3, 1, "", "is_zero_or_mod_zero"], [35, 3, 1, "", "nand"], [36, 3, 1, "", "xnor"], [37, 3, 1, "", "xor"]], "warg.business": [[39, 3, 1, "", "busy_indicator"]], "warg.colors": [[41, 0, 0, "-", "color_conversion"], [46, 0, 0, "-", "css_colors"], [52, 0, 0, "-", "label_colors"]], "warg.colors.color_conversion": [[44, 3, 1, "", "color_from_str"], [45, 3, 1, "", "color_to_str"], [42, 3, 1, "", "rgb"], [43, 3, 1, "", "rgba"]], "warg.colors.css_colors": [[47, 3, 1, "", "ansilen"], [48, 3, 1, "", "color"], [49, 3, 1, "", "is_string"], [50, 3, 1, "", "parse_rgb"], [51, 3, 1, "", "strip_color"]], "warg.colors.label_colors": [[53, 3, 1, "", "compute_color_for_labels"]], "warg.config_shell": [[55, 1, 1, "", "ConfigShell"], [56, 1, 1, "", "PlaybackShell"]], "warg.config_shell.ConfigShell": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "add_func"], [55, 2, 1, "", "add_option"], [55, 2, 1, "", "add_property_options"], [55, 2, 1, "", "close"], [55, 2, 1, "", "cmdloop"], [55, 2, 1, "", "columnize"], [55, 2, 1, "", "complete"], [55, 2, 1, "", "completedefault"], [55, 2, 1, "", "default"], [55, 2, 1, "", "do_close"], [55, 2, 1, "", "do_exit"], [55, 2, 1, "", "do_help"], [55, 2, 1, "", "do_playback"], [55, 2, 1, "", "do_record"], [55, 2, 1, "", "emptyline"], [55, 2, 1, "", "get_names"], [55, 2, 1, "", "onecmd"], [55, 2, 1, "", "parseline"], [55, 2, 1, "", "postcmd"], [55, 2, 1, "", "postloop"], [55, 2, 1, "", "precmd"], [55, 2, 1, "", "preloop"]], "warg.config_shell.PlaybackShell": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "close"], [56, 2, 1, "", "cmdloop"], [56, 2, 1, "", "columnize"], [56, 2, 1, "", "complete"], [56, 2, 1, "", "completedefault"], [56, 2, 1, "", "default"], [56, 2, 1, "", "do_close"], [56, 2, 1, "", "do_exit"], [56, 2, 1, "", "do_help"], [56, 2, 1, "", "do_playback"], [56, 2, 1, "", "do_record"], [56, 2, 1, "", "emptyline"], [56, 2, 1, "", "onecmd"], [56, 2, 1, "", "parseline"], [56, 2, 1, "", "postcmd"], [56, 2, 1, "", "postloop"], [56, 2, 1, "", "precmd"], [56, 2, 1, "", "preloop"]], "warg.context_wrapper": [[58, 1, 1, "", "ContextWrapper"], [59, 1, 1, "", "NopContext"]], "warg.context_wrapper.ContextWrapper": [[58, 2, 1, "", "__init__"]], "warg.context_wrapper.NopContext": [[59, 2, 1, "", "__init__"]], "warg.contexts": [[61, 1, 1, "", "IgnoreInterruptSignal"]], "warg.contexts.IgnoreInterruptSignal": [[61, 2, 1, "", "__init__"]], "warg.data_structures": [[63, 0, 0, "-", "auto_dict"], [68, 0, 0, "-", "mappings"], [75, 0, 0, "-", "named_ordered_dictionary"], [79, 0, 0, "-", "ordered_set"], [81, 0, 0, "-", "sequences"]], "warg.data_structures.auto_dict": [[64, 3, 1, "", "AD"], [65, 3, 1, "", "AutoDict"], [66, 3, 1, "", "recursive_default_dict_print"], [67, 3, 1, "", "sanitise_auto_dict"]], "warg.data_structures.mappings": [[69, 1, 1, "", "AppendingDict"], [70, 3, 1, "", "append_to_dict"], [71, 3, 1, "", "invert_dict"], [72, 3, 1, "", "invert_mapping"], [73, 3, 1, "", "pivot_dict"], [74, 3, 1, "", "pivot_dict_object"]], "warg.data_structures.mappings.AppendingDict": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "clear"], [69, 2, 1, "", "copy"], [69, 2, 1, "", "fromkeys"], [69, 2, 1, "", "get"], [69, 2, 1, "", "items"], [69, 2, 1, "", "keys"], [69, 2, 1, "", "pop"], [69, 2, 1, "", "popitem"], [69, 2, 1, "", "setdefault"], [69, 2, 1, "", "update"], [69, 2, 1, "", "values"]], "warg.data_structures.named_ordered_dictionary": [[76, 4, 1, "", "IllegalAttributeKey"], [77, 5, 1, "", "NOD"], [78, 1, 1, "", "NamedOrderedDictionary"]], "warg.data_structures.named_ordered_dictionary.NamedOrderedDictionary": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "add_unnamed_arg"], [78, 2, 1, "", "as_dict"], [78, 2, 1, "", "as_flat_tuples"], [78, 2, 1, "", "as_list"], [78, 2, 1, "", "as_tuples"], [78, 2, 1, "", "clear"], [78, 2, 1, "", "get"], [78, 2, 1, "", "items"], [78, 2, 1, "", "keys"], [78, 2, 1, "", "pop"], [78, 2, 1, "", "popitem"], [78, 2, 1, "", "setdefault"], [78, 2, 1, "", "update"], [78, 2, 1, "", "values"]], "warg.data_structures.ordered_set": [[80, 1, 1, "", "OrderedSet"]], "warg.data_structures.ordered_set.OrderedSet": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "add"], [80, 2, 1, "", "append"], [80, 2, 1, "", "clear"], [80, 2, 1, "", "copy"], [80, 2, 1, "", "count"], [80, 2, 1, "", "difference"], [80, 2, 1, "", "difference_update"], [80, 2, 1, "", "discard"], [80, 2, 1, "", "get_indexer"], [80, 2, 1, "", "get_loc"], [80, 2, 1, "", "index"], [80, 2, 1, "", "intersection"], [80, 2, 1, "", "intersection_update"], [80, 2, 1, "", "isdisjoint"], [80, 2, 1, "", "issubset"], [80, 2, 1, "", "issuperset"], [80, 2, 1, "", "pop"], [80, 2, 1, "", "remove"], [80, 2, 1, "", "symmetric_difference"], [80, 2, 1, "", "symmetric_difference_update"], [80, 2, 1, "", "union"], [80, 2, 1, "", "update"]], "warg.data_structures.sequences": [[82, 3, 1, "", "split"]], "warg.datetimes": [[84, 3, 1, "", "default_datetime_repr"], [85, 3, 1, "", "now_repr"]], "warg.debug": [[87, 3, 1, "", "evaluate_context"]], "warg.decorators": [[89, 0, 0, "-", "caching"], [102, 0, 0, "-", "hashing"], [104, 0, 0, "-", "kw_passing"], [114, 0, 0, "-", "timing"]], "warg.decorators.caching": [[90, 0, 0, "-", "look_up_table"], [100, 0, 0, "-", "property_caching"]], "warg.decorators.caching.look_up_table": [[91, 3, 1, "", "add_lut"], [92, 3, 1, "", "look_up"], [93, 3, 1, "", "look_up_args"], [94, 3, 1, "", "look_up_kws"], [95, 3, 1, "", "precompute_lut"], [96, 3, 1, "", "precompute_lut_args"], [97, 3, 1, "", "precompute_lut_args_dec"], [98, 3, 1, "", "precompute_lut_dec"], [99, 3, 1, "", "precompute_lut_kws"]], "warg.decorators.caching.property_caching": [[101, 1, 1, "", "cached_property"]], "warg.decorators.caching.property_caching.cached_property": [[101, 2, 1, "", "__init__"]], "warg.decorators.hashing": [[103, 3, 1, "", "make_hash"]], "warg.decorators.kw_passing": [[105, 1, 1, "", "AlsoDecorator"], [106, 3, 1, "", "drop_args"], [107, 3, 1, "", "drop_kws"], [108, 3, 1, "", "drop_unused_args"], [109, 3, 1, "", "drop_unused_kws"], [110, 3, 1, "", "eval_sig_kw_params"], [111, 3, 1, "", "passes_kws_to"], [112, 3, 1, "", "super_init_pass_on_kws"], [113, 3, 1, "", "to_keyword_only"]], "warg.decorators.kw_passing.AlsoDecorator": [[105, 2, 1, "", "__init__"]], "warg.decorators.timing": [[115, 1, 1, "", "StopWatch"], [116, 3, 1, "", "timeit"]], "warg.decorators.timing.StopWatch": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "override_arithmetics"], [115, 6, 1, "", "since_start"], [115, 2, 1, "", "start_timer"], [115, 2, 1, "", "stop_timer"], [115, 2, 1, "", "tick"]], "warg.exceptions": [[119, 4, 1, "", "IncompatiblePackageVersions"], [120, 4, 1, "", "NoData"]], "warg.functions": [[122, 3, 1, "", "args_sink"], [123, 3, 1, "", "call_identity"], [124, 3, 1, "", "chain_apply"], [125, 3, 1, "", "chain_filter"], [126, 3, 1, "", "collate_first_dim"], [127, 3, 1, "", "empty_str"], [128, 3, 1, "", "flip_two_level_mapping"], [129, 3, 1, "", "identity"], [130, 3, 1, "", "invert_shallow_mapping"], [131, 3, 1, "", "kws_sink"], [132, 3, 1, "", "nop"], [133, 3, 1, "", "prod"], [134, 3, 1, "", "sink"], [135, 3, 1, "", "swap_mapping_order"]], "warg.gdkc": [[137, 5, 1, "", "GDKC"], [138, 1, 1, "", "GeneralisedDelayedKwargConstruction"]], "warg.gdkc.GeneralisedDelayedKwargConstruction": [[138, 2, 1, "", "__init__"]], "warg.generators": [[140, 0, 0, "-", "cyclic_generators"], [143, 0, 0, "-", "filtering"], [146, 0, 0, "-", "mapping_generator"], [150, 0, 0, "-", "zipping_generator"]], "warg.generators.cyclic_generators": [[141, 3, 1, "", "cos_gen"], [142, 3, 1, "", "sin_gen"]], "warg.generators.filtering": [[144, 1, 1, "", "FilterModeEnum"], [145, 3, 1, "", "symbol_filter"]], "warg.generators.filtering.FilterModeEnum": [[144, 2, 1, "", "__init__"]], "warg.generators.mapping_generator": [[147, 3, 1, "", "inner_map"], [148, 3, 1, "", "kw_map"], [149, 3, 1, "", "yield_and_map"]], "warg.generators.zipping_generator": [[151, 3, 1, "", "unzip"], [152, 3, 1, "", "unzipper"]], "warg.imports": [[155, 3, 1, "", "import_warning"], [156, 3, 1, "", "is_module_available"], [157, 3, 1, "", "reimported_warning"]], "warg.manipulation": [[159, 3, 1, "", "recursive_flatten"]], "warg.map_itertools": [[161, 3, 1, "", "map_combinations"], [162, 3, 1, "", "map_combinations_with_replacement"], [163, 3, 1, "", "map_permutations"], [164, 3, 1, "", "map_product"], [165, 3, 1, "", "map_value_product"]], "warg.math": [[167, 0, 0, "-", "multiples"], [169, 0, 0, "-", "ordinals"], [178, 0, 0, "-", "powers"]], "warg.math.multiples": [[168, 3, 1, "", "lcm"]], "warg.math.ordinals": [[170, 3, 1, "", "ceil_even"], [171, 3, 1, "", "ceil_odd"], [172, 3, 1, "", "floor_even"], [173, 3, 1, "", "floor_odd"], [174, 3, 1, "", "next_even"], [175, 3, 1, "", "next_odd"], [176, 3, 1, "", "prev_even"], [177, 3, 1, "", "prev_odd"]], "warg.math.powers": [[179, 3, 1, "", "next_pow"], [180, 3, 1, "", "next_pow_10"], [181, 3, 1, "", "next_pow_2"], [182, 3, 1, "", "next_power"], [183, 3, 1, "", "next_power_10"], [184, 3, 1, "", "next_power_2"], [185, 3, 1, "", "prev_pow"], [186, 3, 1, "", "prev_pow_10"], [187, 3, 1, "", "prev_pow_2"]], "warg.metas": [[189, 0, 0, "-", "post_init"], [191, 0, 0, "-", "singleton"]], "warg.metas.post_init": [[190, 1, 1, "", "PostInit"]], "warg.metas.post_init.PostInit": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "mro"]], "warg.mixins": [[193, 0, 0, "-", "dict_mixins"], [197, 0, 0, "-", "ordinal_index_mixin"]], "warg.mixins.dict_mixins": [[194, 1, 1, "", "IterDictItemsMixin"], [195, 1, 1, "", "IterDictKeysMixin"], [196, 1, 1, "", "IterDictValuesMixin"]], "warg.mixins.dict_mixins.IterDictItemsMixin": [[194, 2, 1, "", "__init__"]], "warg.mixins.dict_mixins.IterDictKeysMixin": [[195, 2, 1, "", "__init__"]], "warg.mixins.dict_mixins.IterDictValuesMixin": [[196, 2, 1, "", "__init__"]], "warg.mixins.ordinal_index_mixin": [[198, 1, 1, "", "OrdinalIndexingDictMixin"]], "warg.mixins.ordinal_index_mixin.OrdinalIndexingDictMixin": [[198, 2, 1, "", "__init__"]], "warg.os": [[201, 0, 0, "-", "os_platform"], [207, 0, 0, "-", "path_utilities"]], "warg.os.os_platform": [[202, 3, 1, "", "get_platform"], [203, 3, 1, "", "is_linux"], [204, 3, 1, "", "is_mac"], [205, 3, 1, "", "is_nix"], [206, 3, 1, "", "is_windows"]], "warg.os.path_utilities": [[208, 3, 1, "", "latest_file"]], "warg.plugin": [[210, 3, 1, "", "get_dynamic_plugins"], [211, 3, 1, "", "get_plugins"], [212, 3, 1, "", "get_static_plugins"]], "warg.replication": [[215, 3, 1, "", "replicate"]], "warg.strings": [[217, 3, 1, "", "indent_lines"], [218, 3, 1, "", "str_to_tuple"]], "warg.styling": [[220, 1, 1, "", "PrintStyle"], [221, 3, 1, "", "generate_style"], [222, 3, 1, "", "get_terminal_size"], [223, 3, 1, "", "hyperlink_path"], [224, 3, 1, "", "hyperlink_url"], [225, 3, 1, "", "sprint"]], "warg.styling.PrintStyle": [[220, 2, 1, "", "__init__"]], "warg.text": [[227, 3, 1, "", "deamericanise"], [228, 3, 1, "", "to_british_english"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"warg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "argument": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "configobject": 2, "upperattrmetaclass": 3, "add_bool_arg": 4, "check_for_duplicates_in_arg": 5, "config_to_map": 6, "get_upper_case_vars_or_protected_of": 7, "lower_dict": 8, "str2bool": 9, "str_to_bool": 10, "to_lower_properti": 11, "upper_dict": 12, "ast_op": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "arg_indentifi": [14, 15, 16, 17, 18, 19], "argidentifi": 15, "cprinta": 16, "cprintz": 17, "ge_arg_names_recurs": 18, "get_arg_nam": 19, "first_arg_identifi": [20, 21, 22, 23, 24, 25], "firstargidentifi": 21, "cprint": 22, "get_first_arg_nam": 23, "get_first_arg_name_recurs": 24, "recurse_first_arg": 25, "base": [26, 27, 28], "property_set": [27, 28], "propertyset": 28, "boolean_test": [29, 30, 31, 32, 33, 34, 35, 36, 37], "is_none_or_zero_or_neg": 30, "is_none_or_zero_or_negative_or_mod_zero": 31, "is_positive_and_mod_zero": 32, "is_zero_or_mod_below": 33, "is_zero_or_mod_zero": 34, "nand": 35, "xnor": 36, "xor": 37, "busi": [38, 39], "busy_ind": 39, "color": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "color_convers": [41, 42, 43, 44, 45], "rgb": 42, "rgba": 43, "color_from_str": 44, "color_to_str": 45, "css_color": [46, 47, 48, 49, 50, 51], "ansilen": 47, "is_str": 49, "parse_rgb": 50, "strip_color": 51, "label_color": [52, 53], "compute_color_for_label": 53, "config_shel": [54, 55, 56], "configshel": 55, "playbackshel": 56, "context_wrapp": [57, 58, 59], "contextwrapp": 58, "nopcontext": 59, "context": [60, 61], "ignoreinterruptsign": 61, "data_structur": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "auto_dict": [63, 64, 65, 66, 67], "ad": 64, "autodict": 65, "recursive_default_dict_print": 66, "sanitise_auto_dict": 67, "map": [68, 69, 70, 71, 72, 73, 74], "appendingdict": 69, "append_to_dict": 70, "invert_dict": 71, "invert_map": 72, "pivot_dict": 73, "pivot_dict_object": 74, "named_ordered_dictionari": [75, 76, 77, 78], "illegalattributekei": 76, "nod": 77, "namedordereddictionari": 78, "ordered_set": [79, 80], "orderedset": 80, "sequenc": [81, 82], "split": 82, "datetim": [83, 84, 85], "default_datetime_repr": 84, "now_repr": 85, "debug": [86, 87], "evaluate_context": 87, "decor": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "cach": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "look_up_t": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "add_lut": 91, "look_up": 92, "look_up_arg": 93, "look_up_kw": 94, "precompute_lut": 95, "precompute_lut_arg": 96, "precompute_lut_args_dec": 97, "precompute_lut_dec": 98, "precompute_lut_kw": 99, "property_cach": [100, 101], "cached_properti": 101, "hash": [102, 103], "make_hash": 103, "kw_pass": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "alsodecor": 105, "drop_arg": 106, "drop_kw": 107, "drop_unused_arg": 108, "drop_unused_kw": 109, "eval_sig_kw_param": 110, "passes_kws_to": 111, "super_init_pass_on_kw": 112, "to_keyword_onli": 113, "time": [114, 115, 116], "stopwatch": 115, "timeit": 116, "dist_is_edit": 117, "except": [118, 119, 120], "incompatiblepackagevers": 119, "nodata": 120, "function": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "args_sink": 122, "call_ident": 123, "chain_appli": 124, "chain_filt": 125, "collate_first_dim": 126, "empty_str": 127, "flip_two_level_map": 128, "ident": 129, "invert_shallow_map": 130, "kws_sink": 131, "nop": 132, "prod": 133, "sink": 134, "swap_mapping_ord": 135, "gdkc": [136, 137, 138], "generaliseddelayedkwargconstruct": 138, "gener": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "cyclic_gener": [140, 141, 142], "cos_gen": 141, "sin_gen": 142, "filter": [143, 144, 145], "filtermodeenum": 144, "symbol_filt": 145, "mapping_gener": [146, 147, 148, 149], "inner_map": 147, "kw_map": 148, "yield_and_map": 149, "zipping_gener": [150, 151, 152], "unzip": 151, "unzipp": 152, "get_vers": 153, "import": [154, 155, 156, 157], "import_warn": 155, "is_module_avail": 156, "reimported_warn": 157, "manipul": [158, 159], "recursive_flatten": 159, "map_itertool": [160, 161, 162, 163, 164, 165], "map_combin": 161, "map_combinations_with_replac": 162, "map_permut": 163, "map_product": 164, "map_value_product": 165, "math": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "multipl": [167, 168], "lcm": 168, "ordin": [169, 170, 171, 172, 173, 174, 175, 176, 177], "ceil_even": 170, "ceil_odd": 171, "floor_even": 172, "floor_odd": 173, "next_even": 174, "next_odd": 175, "prev_even": 176, "prev_odd": 177, "power": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "next_pow": [179, 182], "next_pow_10": 180, "next_pow_2": 181, "next_power_10": 183, "next_power_2": 184, "prev_pow": 185, "prev_pow_10": 186, "prev_pow_2": 187, "meta": [188, 189, 190, 191], "post_init": [189, 190], "postinit": 190, "singleton": 191, "mixin": [192, 193, 194, 195, 196, 197, 198], "dict_mixin": [193, 194, 195, 196], "iterdictitemsmixin": 194, "iterdictkeysmixin": 195, "iterdictvaluesmixin": 196, "ordinal_index_mixin": [197, 198], "ordinalindexingdictmixin": 198, "od": 199, "os": [200, 201, 202, 203, 204, 205, 206, 207, 208], "os_platform": [201, 202, 203, 204, 205, 206], "get_platform": 202, "is_linux": 203, "is_mac": 204, "is_nix": 205, "is_window": 206, "path_util": [207, 208], "latest_fil": 208, "plugin": [209, 210, 211, 212], "get_dynamic_plugin": 210, "get_plugin": 211, "get_static_plugin": 212, "replic": [213, 214, 215], "broadcastnon": 214, "string": [216, 217, 218], "indent_lin": 217, "str_to_tupl": 218, "style": [219, 220, 221, 222, 223, 224, 225], "printstyl": 220, "generate_styl": 221, "get_terminal_s": 222, "hyperlink_path": 223, "hyperlink_url": 224, "sprint": 225, "text": [226, 227, 228], "deamericanis": 227, "to_british_english": 228, "typing_extens": 229, "get": 230, "start": 230, "document": 231, "what": 231, "s": 231, "next": 231, "indic": 231, "tabl": 231}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})